apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-app.fullname" . }}
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "my-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "my-app.labels" . | nindent 8 }}
        {{- include "my-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: my-app
          image: "{{ .Values.image.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - containerPort: 80
          env:
            {{- if kindIs "array" .Values.env }}
            {{- range .Values.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
            {{- else if kindIs "map" .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: "{{ $value.name }}"
              value: "{{ $value.value }}"
            {{- end }}
            {{- end }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          volumeMounts:
            - name: my-app-data
              mountPath: /app/data
      volumes:
        - name: my-app-data
          persistentVolumeClaim:
            claimName: {{ include "my-app.fullname" . }}-pvc
